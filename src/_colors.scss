// Context: (class-name, css-property).
$color-types: (
	("text", "color"),
	("bg", "background-color"),
	("glow", "text-shadow")
);

// Context: (class-name, css-value).
$teams: (
	("mercedes",	#00d2be),
	("ferrari",		#dc0000),
	("redbull",		#0600ef),
	("alpine",		#0090ff),
	("haas",		#ffffff),
	("alphatauri",	#2b4562),
	("williams",	#005aff),
	("astonmartin",	#006f62),
	("alfaromeo",	#900000),
	("mclaren",		#ff8700)
);

.color-
{
	@each $color-type in $color-types
	{
		// E.g. text-
		&#{nth($color-type, 1)}-
		{
			@each $team in $teams
			{
				// E.g. mercedes
				&#{nth($team, 1)}
				{
					// For glow, text-shadow needs more properties.
					@if #{nth($color-type, 1)} == "glow"
					{
						#{nth($color-type, 2)}: 0 0 $b / 2 #{nth($team, 2)}, 0 0 $b / 2 #{nth($team, 2)};
					}
					@else
					{
						// E.g. color: rgb(0, 210, 190);
						#{nth($color-type, 2)}: #{nth($team, 2)};
					}
				}
			}
		}
	}
}

// These two work like this:
// 1. Loop over the color types (one for (text) color, one for background-color).
// 2. Create the class for that color type (.color-text-... or .color-bg-...).
// 3. Loop over the teams.
// 4. Create the class (e.g. .color-text-mercedes) and add the property (color: rgba(); or background-color: rgba();).
// The end results are 20 classes, one for text, and one for background for the 10 teams.

$grid-eliminated: rgb(118, 1, 15);
$grid-ontrack: rgb(255, 255, 255);
$grid-inpit: rgb(160, 160, 160);

$grid-blacktext: (
	("inpit", rgb(160, 160, 160)),
	("ontrack", rgb(255, 255, 255))
);

// The comma is needed at the end of 1 element lists, otherwise the foreach fails.
// If the list has more than 1 element, the last item does not need the comma.
$grid-whitetext: (
	("eliminated", rgb(118, 1, 15)),
);

.grid.grid-
{
	@each $black in $grid-blacktext
	{
		&#{nth($black, 1)}
		{
			background-color: #{nth($black, 2)};
		}
	}

	@each $white in $grid-whitetext
	{
		&#{nth($white, 1)}
		{
			background-color: #{nth($white, 2)};
			color: rgb(255, 255, 255);
		}
	}
}